---
 - name: Drupal Core Update to {{ drupal_version }}
   hosts: '{{ host }}'
   become: yes
   become_user: root
   become_method: dzdo
   vars:

     - site: '{{ site }}'
     - tier: '{{ tier }}'
     - drupal_version: '{{ drupal_version }}'
     - siteroot: /local/drupal/{{ site }}/sites/default
     - drupalroot: /local/drupal/{{ site }}
     - dbfile: "{{ site }}-{{ tier }}-db"
     - date: "{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
     - sitecopy: "{{ site }}-site-{{ tier }}-copy"
     - backups: /local/drupal/backups
     - drupaluser: drupal

   tasks:
     - name: Take sql dump of {{ tier }} database.
       shell: 
         cmd: "drush sql-dump --gzip --result-file={{ backups }}/{{ dbfile }}-{{ date }}"
         chdir: "{{ siteroot }}"

     - name: Backup site directory
       shell: 
         cmd: tar -czvf {{ backups }}/{{ sitecopy }}-{{ date }}.tgz {{ drupalroot }}
         
     - name: Check file .htaccess
       stat:
         path: "{{ siteroot }}/.htaccess"
       register: htaccess

     - name: Copy .htaccess file to /tmp
       shell: 
         cmd: cp -p .htaccess /tmp/htaccess-preserve-{{ drupal_version }}
         chdir: "{{ drupalroot }}"
       when: htaccess.stat.exists

     - name: Check robots.txt
       stat:
         path: "{{ siteroot }}/robots.txt"
       register: robots

     - name: Copy robots.txt to /tmp
       shell: 
         cmd: cp -p robots.txt /tmp/robots-preserve-{{ drupal_version }}
         chdir: "{{ drupalroot }}"
       when: robots.stat.exists

     - name: Put the {{ site }} into maintenance mode
       shell: 
         cmd: drush vset --exact maintenance_mode 1
         chdir: "{{ siteroot }}"
       register: maint_mode
     - debug: msg={{ maint_mode }}

     - name: Change password policy module file
       shell:
         cmd: sed -i 's/project = /;project = /;s/datestamp = /;datestamp = /' "{{ siteroot }}/../all/modules/contrib/password_policy/{{ item }}"
       with_items:
         - password_policy.info
         - password_policy_test/password_policy_test.info
       when: site == "cmr"

     - name: Clear drush cache
       shell:
         cmd: drush cc all
         chdir: "{{ siteroot }}"
  
#    - name: Refresh the Drupal
#      shell:
#        cmd: drush rf
#      when: site == "cmr"

     - name: Update the drupal core for non cmr
       shell: 
         cmd: drush up drupal-{{ drupal_version }} -y --verbose --no-backup
         chdir: "{{ siteroot }}"
       when: site != "cmr"
       register: drupalupdate
     - debug: msg={{ drupalupdate }}

     - name: Update the drupal core for cmr
       shell:
         cmd: drush pm-update drupal -y
         chdir: "{{ siteroot }}"
       when: site == "cmr"

     - name: Restore .htaccess file from /tmp
       shell: 
         cmd: cp -p /tmp/htaccess-preserve-{{ drupal_version }} .htaccess
         chdir: "{{ drupalroot }}"
       #when: htaccess.stat.exists

     - name: Restore robots.txt file from /tmp
       shell: 
         cmd: cp -p  /tmp/robots-preserve-{{ drupal_version }} robots.txt
         chdir: "{{ drupalroot }}"
       #when: robots.stat.exists

     - name: Change ownership of {{ site }} site.
       file:
         owner: "{{ drupaluser }}"
         group: "{{ drupaluser }}"
         path: "{{ drupalroot }}"
         recurse: yes

     - name: Remove install.php file
       file: 
         path: "{{ drupalroot }}/install.php"
         state: absent
     
     - name: Modify drupal root permissions
       shell: 
         cmd: chmod -R a+r *
         chdir: "{{ drupalroot }}"

     
     # - name: Update the drupal drupal database
     #   shell: 
     #     cmd: drush updatedb -y
     #     chdir: "{{ siteroot }}"
     #   register: dbupdate
     # - debug: msg={{ dbupdate }}

     - name: Take the {{ site }} out of maintenance mode
       shell: 
         cmd: drush vset --exact maintenance_mode 0
         chdir: "{{ siteroot }}"
       register: maint_mode
     - debug: msg={{ maint_mode }}

     - name: Clear drush cache
       shell:
         cmd: drush cc all
         chdir: "{{ siteroot }}"

     - name: Verify Drush version
       shell:
         cmd: drush status | grep 'Drupal version'
         chdir: "{{ siteroot }}"
       register: ver
     - debug: msg={{ ver.stdout }}

