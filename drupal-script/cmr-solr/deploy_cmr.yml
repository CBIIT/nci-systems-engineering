---
# This yaml file is for CMR Drupal server on CBIIT-Apachedeployment
# Coded by Robert Zhang
- name: cmr server deployment
  hosts: '{{ host }}'
  become: yes
  become_user: root
  become_method: dzdo

  vars:
    - hosts: "{{ hosts }}"
    - tier: "{{ tier }}"
    - tier: Dev
    - php_ver: 5.6
    - drupal_ver: 7.5
    - deploy_branch: '{{ deploy_branch }}'
    - appName: cmr
  
  tasks:

    - name: Install unzip
      yum:
        name: unzip
        state: installed

    - name: Install CBIIT Apache
      yum:
        name: cbiit-apache2.4
        state: installed

    - name: Install CBIIT PHP 
      yum:
        name: cbiit-php{{ php_ver }}
        state: installed

    - name: Create a User Group for drupal
      group:
        name: drupal

    - name: Create a user drupal
      user:
        name: drupal
        group: drupal

    - stat:
        path: /local/drupal
      register: drupal_dir

    - name: Create dir /local/drupal
      file:
        path: /local/drupal
        mode: 0755
        owner: apache
        group: apache
        state: directory
      when: not drupal_dir.stat.exists

    - stat:
        path: /local/drupal/cmr
      register: cmr

    - name: Copy zip file then unarchive them to remote
      unarchive:
        dest: /local/drupal
        src: zip_files/CmrMica.zip
        mode: 0644
      when: not cmr.stat.exists

    - name: Rename docs to cmr
      command: mv /local/drupal/docs /local/drupal/cmr
      when: not cmr.stat.exists

    - stat:
        path: /local/drupal/cmr/sites/default/settings.php.org
      register: php_cfg

    - name: Rename original settings.php
      copy:
        dest: /local/drupal/cmr/sites/default/settings.php.org
        src: /local/drupal/cmr/sites/default/settings.php
        remote_src: yes
      when: not php_cfg.stat.exists

    - name: Copy the php config file based upon Tier
      copy:
        dest: /local/drupal/cmr/sites/default/settings.php
        src: "cfg_file/{{ tier }}/settings.php"
        mode: 0444
      when: not php_cfg.stat.exists

    - name: Change ownership for /local/drupal/cmr
      file:
        owner: "drupal"
        group: "drupal"
        path: "/local/drupal/cmr"
        recurse: yes
        mode: u=rwX,g=rX,o=rX
      when: not cmr.stat.exists

    - name: Check cmr config
      stat:
        path: /local/content/apache/conf/vhosts-ssl/cmr.nonmaint
      register: cmr_cfg

    - name: Rename cmr.nonmaint to cmr.nonmaint.org
      copy:
        remote_src: yes
        dest: /local/content/apache/conf/vhosts-ssl/cmr.nonmaint.org
        src: /local/content/apache/conf/vhosts-ssl/cmr.nonmaint
      when: cmr_cfg.stat.exists

    - name: Copy the cmr configure
      copy:
        src: "cfg_file/{{ tier }}/cmr.nonmaint"
        dest: /local/content/apache/conf/vhosts-ssl/cmr.nonmaint
        force: yes
        mode: 0644
      when: not cmr_cfg.stat.exists
      notify: Restart Apache
      
    - name: Create symbolic link
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - {src: "/local/content/apache/conf/vhosts-ssl/cmr.nonmaint", dest: "/local/content/apache/conf/vhosts-ssl/cmr.conf"}
        - {src: "/usr/local/php5.6", dest: "/usr/local/php"}

    - name: Setup the SSL Cert
      copy:
        src: cfg_file/{{ tier }}/{{ item }}
        dest: /local/content/apache/conf/ssl.crt/{{ item }}
        mode: 0444
        force: yes
      with_items:
        - default.wildcard.nci.nih.gov.crt
        - DigiCertCA.crt

    - name: Setup SSL Key
      copy:
        src: cfg_file/{{ tier }}/default.wildcard.nci.nih.gov.key
        dest: /local/content/apache/conf/ssl.key/default.wildcard.nci.nih.gov.key
        force: yes
        mode: 0400

    - name: Create a cmr dir under Apache logs
      stat:
        path: /local/content/apache/logs/cmr
      register: log_cmr

    - file:
        path: /local/content/apache/logs/cmr
        mode: 0755
        state: directory
      when: not log_cmr.stat.exists

    - name: Start the apache
      service:
        name: apache
        state: started
        enabled: yes

  handlers:
    - name: Restart Apache
      service:
        name: apache
        state: restarted
 
